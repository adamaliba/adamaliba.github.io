<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[第十三周作业]]></title>
    <url>%2F2017%2F12%2F10%2F%E7%AC%AC%E5%8D%81%E4%B8%89%E5%91%A8%E4%BD%9C%E4%B8%9A%2F</url>
    <content type="text"><![CDATA[课堂作业：类_时钟【程序】 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263#include&lt;iostream&gt;#include&lt;windows.h&gt;using namespace std;class Time&#123;private: int Hour,Minute,Second;public: Time(int h=0,int m=0,int s=0); void Show(); void setMinute(); void setHour(); void setAll(); void runSecond();&#125;;Time::Time(int h,int m,int s)&#123; Hour=h;Minute=m;Second=s;&#125; void Time::runSecond()&#123; Second++; if(Second&gt;59) setMinute(); if(Minute&gt;59) setHour(); if(Hour&gt;23) setAll();&#125;void Time::Show()&#123; cout&lt;&lt;&apos;\r&apos;&lt;&lt;Hour&lt;&lt;&quot;时&quot;&lt;&lt;Minute&lt;&lt;&quot;分&quot;&lt;&lt;Second&lt;&lt;&quot;秒&quot;; &#125;void Time::setMinute()&#123; Minute++; Second=0;&#125;void Time::setHour()&#123; Hour++; Minute=0;&#125;void Time::setAll()&#123; Second=0; Minute=0; Hour=0;&#125;int main()&#123; int h,m,s; cin&gt;&gt;h&gt;&gt;m&gt;&gt;s; Time t(h,m,s); while(1) &#123; t.Show(); t.runSecond(); Sleep(1000); &#125; return 0;&#125; 第八章：学生成绩类2【问题描述】设计学生成绩类Score。在主函数中定义学生成绩对象数组s[]。用Sum()计算每个学生的总成绩、用Show()显示每个学生的成绩。增加静态成员函数getAvg()，用于返回学生的总平均分。通过增加合适的成员、修改成员函数等完成这一功能。 【输入形式】 包含一组测试数据。第一行输入一个整数n（1&lt;=n&lt;=100）。 接下来n行。每行先输入一个整数op： 当op==1时，输入x, y, z。代表输入一位新同学i(i从1开始编号)的语文、数学、英语成绩，无需输出。 当op==2时，输入i，输出第i同学的总成绩。数据保证这位同学的成绩已经录入。 当op==3时，输入i，依次输出第i同学的语文数学英语成绩，成绩之间用空格隔开。 当op==4时，输出当前已经录入学生的总平均分，结果保留两位小数。 (1&lt;=n&lt;=100, 1&lt;=id&lt;=10, 1&lt;=op&lt;=3, 0&lt;=x,y,z&lt;=100,全部输入都为整型数) 【输出形式】 当op==2，3，4时，输出所求答案，每个答案占一行。 【样例输入】101 90 85 901 80 90 752 13 241 80 80 851 50 60 651 30 90 753 54 【对应样例输出】 265 80 90 75 255.00 30 90 75 225.00 【程序】 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#include &lt;iostream&gt; #include &lt;cstdio&gt; #include &lt;cstdlib&gt; using namespace std; class Score&#123; private: int Chinese, Math, English; static int TotalScore; static int TotalStudent; public: Score() &#123;&#125; void setScore (int c, int m, int e) &#123; Chinese=c; Math=m; English=e; TotalScore+=c+m+e; TotalStudent++; &#125; int Sum() &#123; return Chinese+Math+English; &#125; void Show() &#123; cout&lt;&lt;Chinese&lt;&lt;&apos; &apos;&lt;&lt;Math&lt;&lt;&apos; &apos;&lt;&lt;English&lt;&lt;endl; &#125; double static getAve() &#123; return TotalScore*1.0/TotalStudent; &#125; &#125;; int Score::TotalScore=0;int Score::TotalStudent=0;int main() &#123; int n, op, i, c, m, e; cin &gt;&gt; n; int id = 1; Score sco[11]; while(n--) &#123; cin &gt;&gt; op; if(op == 1) &#123; cin &gt;&gt; c &gt;&gt; m &gt;&gt; e; sco[id].setScore(c,m,e); id++; &#125; else if(op == 2) &#123; cin &gt;&gt; i; cout&lt;&lt;sco[i].Sum()&lt;&lt;endl; &#125; else if(op == 3) &#123; cin &gt;&gt; i; sco[i].Show(); &#125; else &#123; printf(&quot;%.2f\n&quot;, sco[i].getAve()); &#125; &#125; return 0; &#125;]]></content>
      <tags>
        <tag>作业</tag>
        <tag>13周</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello, Hexo!]]></title>
    <url>%2F2017%2F12%2F08%2FHello-Hexo%2F</url>
    <content type="text"><![CDATA[Hexo+Github搭建博客备忘：​ Hexo 位置 E:blog\ ​ 开启服务器 hexo s 窗口被占用 hexo server -p 5000(端口号) ​ 新建文章 hexo new post “article title” ​ 文章生成及部署 hexo d -g ​ 仍需改进：​ NexT主题更换 ​ 侧边栏配置、图标 ​ 站内搜索功能 ​ 设置作者、站点描述、插入头像图片等 参考博客：​ http://blog.csdn.net/gdutxiaoxu/article/details/53576018 手把手教你用Hexo+Github 搭建属于自己的博客 ​ http://www.jianshu.com/p/e99ed60390a8 20分钟教你使用hexo搭建github博客 ​ http://www.cnblogs.com/fengxiongZz/p/7707219.html 使用Hexo+Github一步步搭建属于自己的博客（基础及进阶） ​ https://hexo.io 官网]]></content>
      <tags>
        <tag>技术实践</tag>
        <tag>Github</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F12%2F08%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
